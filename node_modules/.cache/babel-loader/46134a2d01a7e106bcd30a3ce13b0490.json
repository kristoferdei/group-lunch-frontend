{"ast":null,"code":"var _jsxFileName = \"/Users/kristoferdei/Documents/TIS/Git/group-lunch-frontend/src/Mirage.tsx\";\nimport React from 'react';\nimport { useQuery } from 'react-query';\n\nfunction Mirage() {\n  const {\n    status,\n    data,\n    error\n  } = useQuery('movies', () => fetch('/api/movies').then(x => x.json()));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, data.map(movie => /*#__PURE__*/React.createElement(\"li\", {\n    key: movie.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }\n  }, movie.name, \" (\", movie.year, \")\"))), \")}\");\n}\n\nexport default Mirage;","map":{"version":3,"sources":["/Users/kristoferdei/Documents/TIS/Git/group-lunch-frontend/src/Mirage.tsx"],"names":["React","useQuery","Mirage","status","data","error","fetch","then","x","json","map","movie","id","name","year"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;;AAIA,SAASC,MAAT,GAAkB;AAEd,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA;AAAhB,MAA0BJ,QAAQ,CAAc,QAAd,EAAwB,MAC5DK,KAAK,CAAC,aAAD,CAAL,CAAqBC,IAArB,CAA2BC,CAAD,IAAOA,CAAC,CAACC,IAAF,EAAjC,CADoC,CAAxC;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,IAAI,CAAEM,GAAN,CAAWC,KAAD,iBACP;AAAI,IAAA,GAAG,EAAEA,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,KAAK,CAACE,IADX,QACmBF,KAAK,CAACG,IADzB,MADH,CADL,CADJ,OADJ;AAYH;;AAED,eAAeZ,MAAf","sourcesContent":["import React from 'react';\nimport { useQuery } from 'react-query';\n\ntype Data = { id: number; name: string; year: number };\n\nfunction Mirage() {\n\n    const { status, data, error } = useQuery<Data[], any>('movies', () =>\n        fetch('/api/movies').then((x) => x.json())\n    );\n\n    return (\n        <div>\n            <ul>\n                {data!.map((movie) => (\n                    <li key={movie.id}>\n                        {movie.name} ({movie.year})\n                    </li>\n                ))}\n            </ul>\n            )}\n        </div>\n    );\n}\n\nexport default Mirage;\n"]},"metadata":{},"sourceType":"module"}