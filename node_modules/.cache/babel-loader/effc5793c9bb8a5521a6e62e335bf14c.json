{"ast":null,"code":"import Axios from 'axios';\nexport const BOUNCE_IT_TOKEN_KEY = 'bounce_it_token_key';\n\nconst storeToken = token => {\n  localStorage.setItem(BOUNCE_IT_TOKEN_KEY, token);\n};\n\nexport const onLogin = async data => {\n  const requestConfig = {\n    method: 'post',\n    url: 'http://localhost:4000/auth/login',\n    data\n  };\n\n  try {\n    const {\n      data: {\n        accessToken\n      }\n    } = await Axios.request(requestConfig);\n    storeToken(accessToken);\n    return {\n      acce\n    };\n  } catch (e) {\n    console.error(e);\n    return {\n      error: e.response.data.message\n    };\n  }\n};\nexport const onRegister = async data => {\n  const requestConfig = {\n    method: 'post',\n    url: 'http://localhost:4000/auth/register',\n    data\n  };\n\n  try {\n    const {\n      data: token\n    } = await Axios.request(requestConfig);\n    storeToken(token);\n    return {\n      token\n    };\n  } catch (e) {\n    console.error(e);\n    return {\n      error: e.response.data.message\n    };\n  }\n};","map":{"version":3,"sources":["/Users/kristoferdei/Documents/TIS/Git/group-lunch-frontend/src/api/auth.api.ts"],"names":["Axios","BOUNCE_IT_TOKEN_KEY","storeToken","token","localStorage","setItem","onLogin","data","requestConfig","method","url","accessToken","request","acce","e","console","error","response","message","onRegister"],"mappings":"AAAA,OAAOA,KAAP,MAA0C,OAA1C;AAcA,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;;AAEP,MAAMC,UAAU,GAAIC,KAAD,IAAwB;AACzCC,EAAAA,YAAY,CAACC,OAAb,CAAqBJ,mBAArB,EAA0CE,KAA1C;AACD,CAFD;;AAIA,OAAO,MAAMG,OAAO,GAAG,MAAOC,IAAP,IAA2C;AAChE,QAAMC,aAAiC,GAAG;AACxCC,IAAAA,MAAM,EAAE,MADgC;AAExCC,IAAAA,GAAG,EAAE,kCAFmC;AAGxCH,IAAAA;AAHwC,GAA1C;;AAMA,MAAI;AACF,UAAM;AACJA,MAAAA,IAAI,EAAE;AAAEI,QAAAA;AAAF;AADF,QAEF,MAAMX,KAAK,CAACY,OAAN,CAAgCJ,aAAhC,CAFV;AAGAN,IAAAA,UAAU,CAACS,WAAD,CAAV;AACA,WAAO;AACLE,MAAAA;AADK,KAAP;AAGD,GARD,CAQE,OAAOC,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,WAAO;AAAEE,MAAAA,KAAK,EAAEF,CAAC,CAACG,QAAF,CAAWV,IAAX,CAAgBW;AAAzB,KAAP;AACD;AACF,CAnBM;AAqBP,OAAO,MAAMC,UAAU,GAAG,MAAOZ,IAAP,IAA2C;AACnE,QAAMC,aAAiC,GAAG;AACxCC,IAAAA,MAAM,EAAE,MADgC;AAExCC,IAAAA,GAAG,EAAE,qCAFmC;AAGxCH,IAAAA;AAHwC,GAA1C;;AAMA,MAAI;AACF,UAAM;AAAEA,MAAAA,IAAI,EAAEJ;AAAR,QAAkB,MAAMH,KAAK,CAACY,OAAN,CAAcJ,aAAd,CAA9B;AACAN,IAAAA,UAAU,CAACC,KAAD,CAAV;AACA,WAAO;AACLA,MAAAA;AADK,KAAP;AAGD,GAND,CAME,OAAOW,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,WAAO;AAAEE,MAAAA,KAAK,EAAEF,CAAC,CAACG,QAAF,CAAWV,IAAX,CAAgBW;AAAzB,KAAP;AACD;AACF,CAjBM","sourcesContent":["import Axios, { AxiosRequestConfig } from 'axios'\n\nexport interface Credentials {\n  username: string\n  fullName: string\n  email: string\n  password: string\n}\n\ninterface LoginApiResponse {\n  accessToken: string\n  username: string\n}\n\nexport const BOUNCE_IT_TOKEN_KEY = 'bounce_it_token_key'\n\nconst storeToken = (token: string): any => {\n  localStorage.setItem(BOUNCE_IT_TOKEN_KEY, token)\n}\n\nexport const onLogin = async (data: Credentials): Promise<any> => {\n  const requestConfig: AxiosRequestConfig = {\n    method: 'post',\n    url: 'http://localhost:4000/auth/login',\n    data,\n  }\n\n  try {\n    const {\n      data: { accessToken },\n    } = await Axios.request<LoginApiResponse>(requestConfig)\n    storeToken(accessToken)\n    return {\n      acce,\n    }\n  } catch (e) {\n    console.error(e)\n    return { error: e.response.data.message }\n  }\n}\n\nexport const onRegister = async (data: Credentials): Promise<any> => {\n  const requestConfig: AxiosRequestConfig = {\n    method: 'post',\n    url: 'http://localhost:4000/auth/register',\n    data,\n  }\n\n  try {\n    const { data: token } = await Axios.request(requestConfig)\n    storeToken(token)\n    return {\n      token,\n    }\n  } catch (e) {\n    console.error(e)\n    return { error: e.response.data.message }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}