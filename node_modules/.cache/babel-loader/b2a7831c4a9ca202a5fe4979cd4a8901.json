{"ast":null,"code":"var _jsxFileName = \"/Users/kristoferdei/Documents/TIS/Git/group-lunch-frontend/src/components/Register.tsx\";\nimport React from 'react';\nimport '../tailwind.output.css';\nimport { useForm } from 'react-hook-form';\nexport const Register = () => {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log('data', data);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"fullname\",\n    name: \"fullname\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), errors.username && errors.username.type === 'required' && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 66\n    }\n  }, \"You must enter your username.\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"fullname\",\n    name: \"fullname\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), errors.fullname && errors.fullname.type === 'required' && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 66\n    }\n  }, \"You must enter your name.\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), errors.email && errors.email.type === 'required' && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 60\n    }\n  }, \"You must enter your email address.\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"Save\"));\n};","map":{"version":3,"sources":["/Users/kristoferdei/Documents/TIS/Git/group-lunch-frontend/src/components/Register.tsx"],"names":["React","useForm","Register","register","handleSubmit","errors","onSubmit","data","console","log","required","username","type","fullname","email"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,wBAAP;AACA,SAASC,OAAT,QAAwB,iBAAxB;AASA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC5B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAqCJ,OAAO,EAAlD;;AACA,QAAMK,QAAQ,GAAIC,IAAD,IAAkB;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;AACD,GAFD;;AAIA,sBACE;AAAM,IAAA,QAAQ,EAAEH,YAAY,CAACE,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,EAAE,EAAC,UAAtB;AAAiC,IAAA,IAAI,EAAC,UAAtC;AAAiD,IAAA,GAAG,EAAEH,QAAQ,CAAC;AAAEO,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGL,MAAM,CAACM,QAAP,IAAmBN,MAAM,CAACM,QAAP,CAAgBC,IAAhB,KAAyB,UAA5C,iBAA0D;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAF7D,eAGE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,EAAE,EAAC,UAAtB;AAAiC,IAAA,IAAI,EAAC,UAAtC;AAAiD,IAAA,GAAG,EAAET,QAAQ,CAAC;AAAEO,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIGL,MAAM,CAACQ,QAAP,IAAmBR,MAAM,CAACQ,QAAP,CAAgBD,IAAhB,KAAyB,UAA5C,iBAA0D;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAJ7D,eAKE;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,EAAE,EAAC,OAAvB;AAA+B,IAAA,IAAI,EAAC,OAApC;AAA4C,IAAA,GAAG,EAAET,QAAQ,CAAC;AAAEO,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAMGL,MAAM,CAACS,KAAP,IAAgBT,MAAM,CAACS,KAAP,CAAaF,IAAb,KAAsB,UAAtC,iBAAoD;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CANvD,eAOE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,CADF;AAWD,CAjBM","sourcesContent":["import React from 'react'\nimport '../tailwind.output.css'\nimport { useForm } from 'react-hook-form'\n\ntype Inputs = {\n  username: string\n  fullname: string\n  email: string\n  password: string\n}\n\nexport const Register = () => {\n  const { register, handleSubmit, errors } = useForm<Inputs>()\n  const onSubmit = (data: Inputs) => {\n    console.log('data', data)\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <input type=\"text\" id=\"fullname\" name=\"fullname\" ref={register({ required: true })} />\n      {errors.username && errors.username.type === 'required' && <div className=\"error\">You must enter your username.</div>}\n      <input type=\"text\" id=\"fullname\" name=\"fullname\" ref={register({ required: true })} />\n      {errors.fullname && errors.fullname.type === 'required' && <div className=\"error\">You must enter your name.</div>}\n      <input type=\"email\" id=\"email\" name=\"email\" ref={register({ required: true })} />\n      {errors.email && errors.email.type === 'required' && <div className=\"error\">You must enter your email address.</div>}\n      <button type=\"submit\">Save</button>\n    </form>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}