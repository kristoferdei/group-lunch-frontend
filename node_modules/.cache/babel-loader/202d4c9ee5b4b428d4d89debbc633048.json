{"ast":null,"code":"var _jsxFileName = \"/Users/kristoferdei/Documents/TIS/Git/group-lunch-frontend/src/Mirage.tsx\";\nimport React from 'react';\n\nfunction Mirage() {\n  const [data, setData] = React.useState(null);\n  React.useEffect(() => {\n    fetch('/api/movies').then(x => x.json()).then(setData);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }, data && /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 30\n    }\n  }, JSON.stringify(data, null, 2)))));\n}\n\nexport default Mirage;","map":{"version":3,"sources":["/Users/kristoferdei/Documents/TIS/Git/group-lunch-frontend/src/Mirage.tsx"],"names":["React","Mirage","data","setData","useState","useEffect","fetch","then","x","json","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,MAAT,GAAkB;AAEd,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,KAAK,CAACI,QAAN,CAAe,IAAf,CAAxB;AACAJ,EAAAA,KAAK,CAACK,SAAN,CAAgB,MAAM;AAClBC,IAAAA,KAAK,CAAC,aAAD,CAAL,CACKC,IADL,CACWC,CAAD,IAAOA,CAAC,CAACC,IAAF,EADjB,EAEKF,IAFL,CAEUJ,OAFV;AAGH,GAJD,EAIG,EAJH;AAMA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,IAAI,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMQ,IAAI,CAACC,SAAL,CAAeT,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAAN,CADb,CADJ,CADJ,CADJ;AASH;;AAED,eAAeD,MAAf","sourcesContent":["import React from 'react';\n\nfunction Mirage() {\n\n    const [data, setData] = React.useState(null);\n    React.useEffect(() => {\n        fetch('/api/movies')\n            .then((x) => x.json())\n            .then(setData);\n    }, []);\n\n    return (\n        <div>\n            <div>\n                <div>\n                    {data && <pre>{JSON.stringify(data, null, 2)}</pre>}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Mirage;\n"]},"metadata":{},"sourceType":"module"}