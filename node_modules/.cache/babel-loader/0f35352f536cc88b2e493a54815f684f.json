{"ast":null,"code":"import Axios from 'axios';\nexport const tokenKey = 'token_key';\nexport const userKey = 'user_key';\nexport const nameKey = 'name_key';\nexport const emailKey = 'email_key';\n\nconst storeToken = (accessToken, username, fullName, email) => {\n  localStorage.setItem(tokenKey, accessToken);\n  localStorage.setItem(userKey, username);\n  localStorage.setItem(nameKey, fullName);\n  localStorage.setItem(emailKey, email);\n};\n\nexport const onLogin = async data => {\n  const requestConfig = {\n    method: 'post',\n    headers: {\n      'Access-Control-Allow-Origin': '*'\n    },\n    url: 'http://192.168.0.45:4000/auth/login',\n    data\n  };\n\n  try {\n    const {\n      data: {\n        accessToken,\n        username,\n        fullName,\n        email\n      }\n    } = await Axios.request(requestConfig);\n    storeToken(accessToken, username, fullName, email);\n    return {\n      accessToken\n    };\n  } catch (e) {\n    console.error(e);\n    return {\n      error: e.response.data.message\n    };\n  }\n};\nexport const onRegister = async data => {\n  const requestConfig = {\n    method: 'post',\n    url: 'http://localhost:4000/auth/login',\n    data\n  };\n\n  try {\n    const {\n      data: token,\n      username,\n      fullName,\n      email\n    } = await Axios.request(requestConfig);\n    storeToken(token, username, fullName, email);\n    return {\n      token\n    };\n  } catch (e) {\n    console.error(e);\n    return {\n      error: e.response.data.message\n    };\n  }\n};","map":{"version":3,"sources":["/Users/kristoferdei/Documents/TIS/Git/group-lunch-frontend/src/api/auth.api.ts"],"names":["Axios","tokenKey","userKey","nameKey","emailKey","storeToken","accessToken","username","fullName","email","localStorage","setItem","onLogin","data","requestConfig","method","headers","url","request","e","console","error","response","message","onRegister","token"],"mappings":"AAAA,OAAOA,KAAP,MAA0C,OAA1C;AAgBA,OAAO,MAAMC,QAAQ,GAAG,WAAjB;AACP,OAAO,MAAMC,OAAO,GAAG,UAAhB;AACP,OAAO,MAAMC,OAAO,GAAG,UAAhB;AACP,OAAO,MAAMC,QAAQ,GAAG,WAAjB;;AAEP,MAAMC,UAAU,GAAG,CAACC,WAAD,EAAsBC,QAAtB,EAAwCC,QAAxC,EAA0DC,KAA1D,KAAiF;AAClGC,EAAAA,YAAY,CAACC,OAAb,CAAqBV,QAArB,EAA+BK,WAA/B;AACAI,EAAAA,YAAY,CAACC,OAAb,CAAqBT,OAArB,EAA8BK,QAA9B;AACAG,EAAAA,YAAY,CAACC,OAAb,CAAqBR,OAArB,EAA8BK,QAA9B;AACAE,EAAAA,YAAY,CAACC,OAAb,CAAqBP,QAArB,EAA+BK,KAA/B;AACD,CALD;;AAOA,OAAO,MAAMG,OAAO,GAAG,MAAOC,IAAP,IAA2C;AAChE,QAAMC,aAAiC,GAAG;AACxCC,IAAAA,MAAM,EAAE,MADgC;AAExCC,IAAAA,OAAO,EAAE;AAAE,qCAA+B;AAAjC,KAF+B;AAGxCC,IAAAA,GAAG,EAAE,qCAHmC;AAIxCJ,IAAAA;AAJwC,GAA1C;;AAOA,MAAI;AACF,UAAM;AACJA,MAAAA,IAAI,EAAE;AAAEP,QAAAA,WAAF;AAAeC,QAAAA,QAAf;AAAyBC,QAAAA,QAAzB;AAAmCC,QAAAA;AAAnC;AADF,QAEF,MAAMT,KAAK,CAACkB,OAAN,CAAgCJ,aAAhC,CAFV;AAGAT,IAAAA,UAAU,CAACC,WAAD,EAAcC,QAAd,EAAwBC,QAAxB,EAAkCC,KAAlC,CAAV;AACA,WAAO;AACLH,MAAAA;AADK,KAAP;AAGD,GARD,CAQE,OAAOa,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,WAAO;AAAEE,MAAAA,KAAK,EAAEF,CAAC,CAACG,QAAF,CAAWT,IAAX,CAAgBU;AAAzB,KAAP;AACD;AACF,CApBM;AAsBP,OAAO,MAAMC,UAAU,GAAG,MAAOX,IAAP,IAA2C;AACnE,QAAMC,aAAiC,GAAG;AACxCC,IAAAA,MAAM,EAAE,MADgC;AAExCE,IAAAA,GAAG,EAAE,kCAFmC;AAGxCJ,IAAAA;AAHwC,GAA1C;;AAMA,MAAI;AACF,UAAM;AAAEA,MAAAA,IAAI,EAAEY,KAAR;AAAelB,MAAAA,QAAf;AAAyBC,MAAAA,QAAzB;AAAmCC,MAAAA;AAAnC,QAA6C,MAAMT,KAAK,CAACkB,OAAN,CAAcJ,aAAd,CAAzD;AACAT,IAAAA,UAAU,CAACoB,KAAD,EAAQlB,QAAR,EAAkBC,QAAlB,EAA4BC,KAA5B,CAAV;AACA,WAAO;AACLgB,MAAAA;AADK,KAAP;AAGD,GAND,CAME,OAAON,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,WAAO;AAAEE,MAAAA,KAAK,EAAEF,CAAC,CAACG,QAAF,CAAWT,IAAX,CAAgBU;AAAzB,KAAP;AACD;AACF,CAjBM","sourcesContent":["import Axios, { AxiosRequestConfig } from 'axios'\n\nexport interface Credentials {\n  username: string\n  fullName: string\n  email: string\n  password: string\n}\n\ninterface LoginApiResponse {\n  accessToken: string\n  username: string\n  fullName: string\n  email: string\n}\n\nexport const tokenKey = 'token_key'\nexport const userKey = 'user_key'\nexport const nameKey = 'name_key'\nexport const emailKey = 'email_key'\n\nconst storeToken = (accessToken: string, username: string, fullName: string, email: string): any => {\n  localStorage.setItem(tokenKey, accessToken)\n  localStorage.setItem(userKey, username)\n  localStorage.setItem(nameKey, fullName)\n  localStorage.setItem(emailKey, email)\n}\n\nexport const onLogin = async (data: Credentials): Promise<any> => {\n  const requestConfig: AxiosRequestConfig = {\n    method: 'post',\n    headers: { 'Access-Control-Allow-Origin': '*' },\n    url: 'http://192.168.0.45:4000/auth/login',\n    data,\n  }\n\n  try {\n    const {\n      data: { accessToken, username, fullName, email },\n    } = await Axios.request<LoginApiResponse>(requestConfig)\n    storeToken(accessToken, username, fullName, email)\n    return {\n      accessToken,\n    }\n  } catch (e) {\n    console.error(e)\n    return { error: e.response.data.message }\n  }\n}\n\nexport const onRegister = async (data: Credentials): Promise<any> => {\n  const requestConfig: AxiosRequestConfig = {\n    method: 'post',\n    url: 'http://localhost:4000/auth/login',\n    data,\n  }\n\n  try {\n    const { data: token, username, fullName, email } = await Axios.request(requestConfig)\n    storeToken(token, username, fullName, email)\n    return {\n      token,\n    }\n  } catch (e) {\n    console.error(e)\n    return { error: e.response.data.message }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}