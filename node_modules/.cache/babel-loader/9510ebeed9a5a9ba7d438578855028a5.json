{"ast":null,"code":"var _jsxFileName = \"/Users/kristoferdei/Documents/TIS/Git/group-lunch-frontend/src/components/SignUpForm.tsx\";\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\nimport { onRegister } from '../api/auth.api';\nimport { useNavigation } from 'react-navi';\n\nconst SignUpForm = () => {\n  const navigation = useNavigation();\n  const [{\n    username,\n    fullName,\n    email,\n    password\n  }, setRegisterData] = useState({\n    username: '',\n    fullName: '',\n    email: '',\n    password: ''\n  });\n  const {\n    register,\n    handleSubmit,\n    errors,\n    watch\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log('data', data);\n    onRegister({\n      username,\n      fullName,\n      email,\n      password\n    });\n    navigation.navigate('/');\n  };\n\n  const [passwordShown, setPasswordShown] = useState(false);\n\n  const togglePasswordVisibility = () => {\n    setPasswordShown(!passwordShown);\n  };\n\n  const [passwordShown2, setPasswordShown2] = useState(false);\n\n  const togglePasswordVisibility2 = () => {\n    setPasswordShown2(!passwordShown2);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"w-full max-w-lg\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-wrap -mx-3 mb-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-full md:w-1/2 px-3 mb-6 md:mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"username\",\n    className: \"block uppercase tracking-wide text-gray-700 text-sm font-medium mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: username,\n    onChange: event => setRegisterData({\n      username: event.target.value,\n      fullName,\n      email,\n      password\n    }),\n    type: \"text\",\n    id: \"username\",\n    name: \"username\",\n    placeholder: \"Username\",\n    className: \"appearance-none block w-full text-gray-700 border border-gray-400 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\",\n    ref: register({\n      required: true,\n      minLength: 5\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), errors.username && errors.username.type === 'required' && /*#__PURE__*/React.createElement(\"label\", {\n    className: \"error block tracking-wide text-red-700 text-xs font-medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"You must enter your username.\"), errors.username && errors.username.type === 'minLength' && /*#__PURE__*/React.createElement(\"label\", {\n    className: \"error block tracking-wide text-red-700 text-xs font-medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Must be at least 5 characters long!\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-full md:w-1/2 px-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"fullName\",\n    className: \"block uppercase tracking-wide text-gray-700 text-sm font-medium mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"Full Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: fullName,\n    onChange: event => setRegisterData({\n      username,\n      fullName: event.target.value,\n      email,\n      password\n    }),\n    className: \"appearance-none block w-full text-gray-700 border border-gray-400 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\",\n    type: \"text\",\n    id: \"name\",\n    name: \"name\",\n    placeholder: \"Full Name\",\n    ref: register({\n      required: true,\n      minLength: 5\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }), errors.name && errors.name.type === 'required' && /*#__PURE__*/React.createElement(\"label\", {\n    className: \"error lock tracking-wide text-red-700 text-xs font-medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"You must enter your name.\"), errors.name && errors.name.type === 'minLength' && /*#__PURE__*/React.createElement(\"label\", {\n    className: \"error block tracking-wide text-red-700 text-xs font-medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, \"Must be at least 5 characters long!\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-wrap -mx-3 mb-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-full px-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    className: \"block uppercase tracking-wide text-gray-700 text-sm font-medium mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, \"E-mail\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: email,\n    onChange: event => setRegisterData({\n      username,\n      fullName,\n      email: event.target.value,\n      password\n    }),\n    className: \"appearance-none block w-full text-gray-700 border border-gray-400 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\",\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    placeholder: \"E-mail\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }), errors.email && errors.email.type === 'required' && /*#__PURE__*/React.createElement(\"label\", {\n    className: \"error block tracking-wide text-red-700 text-xs font-medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, \"You must enter your email address.\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-wrap -mx-3 mb-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"relative passWord w-full px-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    className: \"block uppercase tracking-wide text-gray-700 text-sm font-medium mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: password,\n    onChange: event => setRegisterData({\n      username,\n      fullName,\n      email,\n      password: event.target.value\n    }),\n    className: \"appearance-none block w-full text-gray-700 border border-gray-400 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-700\",\n    type: passwordShown ? 'text' : 'password',\n    id: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    ref: register({\n      required: true,\n      minLength: 8\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"i\", {\n    onClick: togglePasswordVisibility,\n    className: \"absolute inset-y-0 right-0 pr-5 flex items-center text-sm leading-5 text-gray-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    onClick: togglePasswordVisibility,\n    icon: passwordShown ? faEye : faEyeSlash,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }))), errors.password && errors.password.type === 'required' && /*#__PURE__*/React.createElement(\"label\", {\n    className: \"error block text-red-700 text-xs font-medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }, \"You must enter your password.\"), errors.password && errors.password.type === 'minLength' && /*#__PURE__*/React.createElement(\"label\", {\n    className: \"error block tracking-wide text-red-700 text-xs font-medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }, \"Must be at least 8 characters long!\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"mt-3 appearance-none block w-full text-gray-700 border border-gray-400 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\",\n    type: passwordShown2 ? 'text' : 'password',\n    id: \"password2\",\n    name: \"password2\",\n    placeholder: \"Password confirmation\",\n    ref: register({\n      required: true,\n      validate: value => {\n        return value === watch('password');\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"i\", {\n    onClick: togglePasswordVisibility2,\n    className: \"absolute inset-y-0 right-0 pr-5 flex items-center text-sm leading-5 text-gray-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    onClick: togglePasswordVisibility2,\n    icon: passwordShown2 ? faEye : faEyeSlash,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 15\n    }\n  }))), errors.password2 && errors.password2.type === 'required' && /*#__PURE__*/React.createElement(\"label\", {\n    className: \"error block text-red-700 text-xs font-medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, \"You must re-enter your password.\"), errors.password2 && errors.password2.type === 'validate' && /*#__PURE__*/React.createElement(\"label\", {\n    className: \"error block text-red-700 text-xs font-medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }\n  }, \"The passwords do not match.\"))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"w-full text-center py-3 rounded bg-gray-700 text-white border border-gray-700 hover:bg-transparent hover:border-gray-700 hover:text-gray-900 focus:outline-none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }\n  }, \"Create Account\"));\n};\n\nexport default SignUpForm;","map":{"version":3,"sources":["/Users/kristoferdei/Documents/TIS/Git/group-lunch-frontend/src/components/SignUpForm.tsx"],"names":["React","useState","useForm","FontAwesomeIcon","faEye","faEyeSlash","onRegister","useNavigation","SignUpForm","navigation","username","fullName","email","password","setRegisterData","register","handleSubmit","errors","watch","onSubmit","data","console","log","navigate","passwordShown","setPasswordShown","togglePasswordVisibility","passwordShown2","setPasswordShown2","togglePasswordVisibility2","event","target","value","required","minLength","type","name","validate","password2"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons'\nimport { onRegister } from '../api/auth.api'\nimport { useNavigation } from 'react-navi'\n\ntype Inputs = {\n  username: string\n  name: string\n  email: string\n  password: string\n  password2: string\n}\n\nconst SignUpForm: React.FunctionComponent = () => {\n  const navigation = useNavigation()\n  const [{ username, fullName, email, password }, setRegisterData] = useState({\n    username: '',\n    fullName: '',\n    email: '',\n    password: '',\n  })\n\n  const { register, handleSubmit, errors, watch } = useForm<Inputs>()\n  const onSubmit: (data: Inputs) => void = (data: Inputs) => {\n    console.log('data', data)\n    onRegister({\n      username,\n      fullName,\n      email,\n      password,\n    })\n    navigation.navigate('/')\n  }\n\n  const [passwordShown, setPasswordShown] = useState(false)\n  const togglePasswordVisibility: () => void = () => {\n    setPasswordShown(!passwordShown)\n  }\n\n  const [passwordShown2, setPasswordShown2] = useState(false)\n  const togglePasswordVisibility2: () => void = () => {\n    setPasswordShown2(!passwordShown2)\n  }\n\n  return (\n    <form className=\"w-full max-w-lg\" onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"flex flex-wrap -mx-3 mb-6\">\n        <div className=\"w-full md:w-1/2 px-3 mb-6 md:mb-0\">\n          <label htmlFor=\"username\" className=\"block uppercase tracking-wide text-gray-700 text-sm font-medium mb-2\">\n            Username\n          </label>\n          <input\n            value={username}\n            onChange={(event): void =>\n              setRegisterData({\n                username: event.target.value,\n                fullName,\n                email,\n                password,\n              })\n            }\n            type=\"text\"\n            id=\"username\"\n            name=\"username\"\n            placeholder=\"Username\"\n            className=\"appearance-none block w-full text-gray-700 border border-gray-400\n                            rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n            ref={register({ required: true, minLength: 5 })}\n          />\n          {errors.username && errors.username.type === 'required' && (\n            <label\n              className=\"error block tracking-wide text-red-700\n                        text-xs font-medium\"\n            >\n              You must enter your username.\n            </label>\n          )}\n          {errors.username && errors.username.type === 'minLength' && (\n            <label\n              className=\"error block tracking-wide text-red-700\n                        text-xs font-medium\"\n            >\n              Must be at least 5 characters long!\n            </label>\n          )}\n        </div>\n        <div className=\"w-full md:w-1/2 px-3\">\n          <label htmlFor=\"fullName\" className=\"block uppercase tracking-wide text-gray-700 text-sm font-medium mb-2\">\n            Full Name\n          </label>\n          <input\n            value={fullName}\n            onChange={(event): void =>\n              setRegisterData({\n                username,\n                fullName: event.target.value,\n                email,\n                password,\n              })\n            }\n            className=\"appearance-none block w-full text-gray-700 border border-gray-400\n                            rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            placeholder=\"Full Name\"\n            ref={register({ required: true, minLength: 5 })}\n          />\n          {errors.name && errors.name.type === 'required' && (\n            <label\n              className=\"error lock tracking-wide text-red-700\n                        text-xs font-medium\"\n            >\n              You must enter your name.\n            </label>\n          )}\n          {errors.name && errors.name.type === 'minLength' && (\n            <label\n              className=\"error block tracking-wide text-red-700\n                        text-xs font-medium\"\n            >\n              Must be at least 5 characters long!\n            </label>\n          )}\n        </div>\n      </div>\n      <div className=\"flex flex-wrap -mx-3 mb-6\">\n        <div className=\"w-full px-3\">\n          <label htmlFor=\"email\" className=\"block uppercase tracking-wide text-gray-700 text-sm font-medium mb-2\">\n            E-mail\n          </label>\n          <input\n            value={email}\n            onChange={(event): void =>\n              setRegisterData({\n                username,\n                fullName,\n                email: event.target.value,\n                password,\n              })\n            }\n            className=\"appearance-none block w-full text-gray-700 border border-gray-400\n                            rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            placeholder=\"E-mail\"\n            ref={register({ required: true })}\n          />\n          {errors.email && errors.email.type === 'required' && (\n            <label\n              className=\"error block tracking-wide text-red-700\n                        text-xs font-medium\"\n            >\n              You must enter your email address.\n            </label>\n          )}\n        </div>\n      </div>\n      <div className=\"flex flex-wrap -mx-3 mb-6\">\n        <div className=\"relative passWord w-full px-3\">\n          <label htmlFor=\"password\" className=\"block uppercase tracking-wide text-gray-700 text-sm font-medium mb-2\">\n            Password\n          </label>\n          <div className=\"relative\">\n            <input\n              value={password}\n              onChange={(event): void =>\n                setRegisterData({\n                  username,\n                  fullName,\n                  email,\n                  password: event.target.value,\n                })\n              }\n              className=\"appearance-none block w-full text-gray-700 border border-gray-400\n                            rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-700\"\n              type={passwordShown ? 'text' : 'password'}\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              ref={register({ required: true, minLength: 8 })}\n            />\n            <i onClick={togglePasswordVisibility} className=\"absolute inset-y-0 right-0 pr-5 flex items-center text-sm leading-5 text-gray-600\">\n              <FontAwesomeIcon onClick={togglePasswordVisibility} icon={passwordShown ? faEye : faEyeSlash} />\n            </i>\n          </div>\n          {errors.password && errors.password.type === 'required' && (\n            <label\n              className=\"error block text-red-700\n                        text-xs font-medium\"\n            >\n              You must enter your password.\n            </label>\n          )}\n          {errors.password && errors.password.type === 'minLength' && (\n            <label\n              className=\"error block tracking-wide text-red-700\n                        text-xs font-medium\"\n            >\n              Must be at least 8 characters long!\n            </label>\n          )}\n          <div className=\"relative\">\n            <input\n              className=\"mt-3 appearance-none block w-full text-gray-700 border border-gray-400\n                            rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n              type={passwordShown2 ? 'text' : 'password'}\n              id=\"password2\"\n              name=\"password2\"\n              placeholder=\"Password confirmation\"\n              ref={register({\n                required: true,\n                validate: (value) => {\n                  return value === watch('password')\n                },\n              })}\n            />\n            <i onClick={togglePasswordVisibility2} className=\"absolute inset-y-0 right-0 pr-5 flex items-center text-sm leading-5 text-gray-600\">\n              <FontAwesomeIcon onClick={togglePasswordVisibility2} icon={passwordShown2 ? faEye : faEyeSlash} />\n            </i>\n          </div>\n          {errors.password2 && errors.password2.type === 'required' && (\n            <label\n              className=\"error block text-red-700\n                        text-xs font-medium\"\n            >\n              You must re-enter your password.\n            </label>\n          )}\n          {errors.password2 && errors.password2.type === 'validate' && (\n            <label\n              className=\"error block text-red-700\n                        text-xs font-medium\"\n            >\n              The passwords do not match.\n            </label>\n          )}\n        </div>\n      </div>\n      <button\n        type=\"submit\"\n        className=\"w-full text-center py-3 rounded bg-gray-700 text-white border border-gray-700\n                            hover:bg-transparent hover:border-gray-700 hover:text-gray-900 focus:outline-none\"\n      >\n        Create Account\n      </button>\n    </form>\n  )\n}\n\nexport default SignUpForm\n"]},"metadata":{},"sourceType":"module"}